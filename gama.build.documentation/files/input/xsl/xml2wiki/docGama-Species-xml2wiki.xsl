<?xml version="1.0" encoding="UTF-8"?><!---->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:wiki="www.google.fr">

<xsl:template match="/">
 	<xsl:text>#summary Built-in Species (Developer Guide)
#sidebar G__TOC 	
=Built-in Species=
----
&lt;font color="red"&gt; This file is automatically generated from java files. Do Not Edit It. &lt;/font&gt;
&lt;br/&gt;
----

It is possible to use in the models a set of built-in agents. These agents allow to directly use some advance features like clustering, multi-criteria analysis, etc. The creation of these agents are similar as for other kinds of agents:

{{{
create species: my_built_in_agent returns: the_agent;
}}}
    
So, for instance, to be able to use clustering techniques in the model:
{{{
create cluster_builder returns: clusterer;
}}}

The list of available built-in agents in GAMA is:

  * cluster_builder: allows to use clustering techniques on a set of agents.
  * multicriteria_analyzer: allows to use multi-criteria analysis methods.

[#Table_of_Contents Top of the page] 

== Table of Contents ==
&lt;wiki:toc max_depth="3" /&gt;
	</xsl:text>

	<xsl:for-each select="doc/speciess/species">
    	<xsl:sort select="@name" />
&lt;br/&gt;
----
==<xsl:value-of select="@name"/>== 	

=== Actions === 
	<xsl:for-each select="actions/action">		
	<xsl:sort select="@name" />  
	 
==== *<xsl:value-of select="@name"/>* ==== 
<xsl:value-of select="documentation/result"/>
  * returns: <xsl:value-of select="@returnType"/>
<xsl:for-each select="args/arg"> 			
  * â†’ *<xsl:value-of select="@name"/>* (<xsl:value-of select="@type"/>): <xsl:value-of select="documentation/result"/> 
</xsl:for-each>

<xsl:if test="documentation/examples[node()]">

{{{
<xsl:for-each select="documentation/examples/example" >
<xsl:if test="@code != ''"><xsl:value-of select="@code"/><xsl:text>
</xsl:text>
</xsl:if>
</xsl:for-each>}}} 
</xsl:if>	
		
</xsl:for-each>			

[#Table_of_Contents Top of the page] 	
	</xsl:for-each>
</xsl:template>
  
</xsl:stylesheet>
